local env = {
	assert=assert,
	error=error,
	ipairs=ipairs,
	next=next,
	pairs=pairs,
	pcall=pcall,
	select=select,
	tonumber=tonumber,
	tostring=tostring,
	type=type,
	unpack=unpack,
	_VERSION=_VERSION,
	xpcall=xpcall,
	coroutine = {
		create=coroutine.create,
		resume=coroutine.resume,
		running=coroutine.running,
		status=coroutine.status,
		wrap=coroutine.wrap,
		yield=coroutine.yield,
	},
	string={
		byte=string.byte,
		char=string.char,
		find=string.find,
		format=string.format,
		gmatch=string.gmatch,
		gsub=string.gsub,
		len=string.len,
		lower=string.lower,
		match=string.match,
		rep=string.rep,
		reverse=string.reverse,
		sub=string.sub,
		upper=string.upper,
	},
	table={
		insert=table.insert,
		maxn=table.maxn,
		remove=table.remove,
        sort=table.sort,
    },
    math={
        abs=math.abs,
        acos=math.acos,
        asin=math.asin,
        atan=math.atan,
        atan2=math.atan2,
        ceil=math.ceil,
        cos=math.cos,
        cosh=math.cosh,
        deg=math.deg,
        exp=math.exp,
        floor=math.floor,
        fmod=math.fmod,
        frexp=math.frexp,
        huge=math.huge,
        ldexp=math.ldexp,
        log=math.log,
        log10=math.log10,
        max=math.max,
        min=math.min,
        modf=math.modf,
        pi=math.pi,
        pow=math.pow,
        rad=math.rad,
        random=math.random,
        randomseed=math.randomseed,
        sin=math.sin,
	    sinh=math.sinh,
        sqrt=math.sqrt,
        tan=math.tan,
        tanh=math.tanh,
    },
    io={
        type=io.type,
    },
    os={
        clock=os.clock,
        date=os.date,
        difftime=os.difftime,
        time=os.time,
    }
}
function sandbox(code)
    local func,err=loadstring(code)
    if err then return err end
    setfenv(func,env)
    return pcall(func)
end

